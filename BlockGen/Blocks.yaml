#TODO: custom verification functions for asin, acos, atan, asinh, acosh, atanh

OneToOneBlocks:
        #
        # af/arith.h
        #

        - func: abs
          header: arith
          supportedTypes:
                  supportAll: true

        - func: arg
          header: arith
          verify: std::arg
          supportedInputTypes:
                  supportComplexFloat: true
          supportedOutputTypes:
                  supportFloat: true

        - func: round
          header: arith
          verify: std::round
          supportedTypes:
                  supportFloat: true

        - func: trunc
          header: arith
          verify: std::trunc
          supportedTypes:
                  supportFloat: true

        - func: floor
          header: arith
          verify: std::floor
          supportedTypes:
                  supportFloat: true

        - func: ceil
          header: arith
          verify: std::ceil
          supportedTypes:
                  supportFloat: true

        - func: sin
          header: arith
          verify: std::sin
          supportedTypes:
                  supportFloat: true

        - func: cos
          header: arith
          verify: std::cos
          supportedTypes:
                  supportFloat: true

        - func: tan
          header: arith
          verify: std::tan
          supportedTypes:
                  supportFloat: true

        - func: asin
          header: arith
          supportedTypes:
                  supportFloat: true

        - func: acos
          header: arith
          supportedTypes:
                  supportFloat: true

        - func: atan
          header: arith
          supportedTypes:
                  supportFloat: true

        - func: complex
          header: arith
          supportedInputTypes:
                  supportFloat: true
          supportedOutputTypes:
                  supportComplexFloat: true

        - func: real
          header: arith
          verify: testReal
          supportedInputTypes:
                  supportComplexFloat: true
          supportedOutputTypes:
                  supportFloat: true

        - func: imag
          header: arith
          verify: testImag
          supportedInputTypes:
                  supportComplexFloat: true
          supportedOutputTypes:
                  supportFloat: true

        - func: conjg
          header: arith
          verify: std::conj
          supportedTypes:
                  supportComplexFloat: true

        - func: sinh
          header: arith
          verify: std::sinh
          supportedTypes:
                  supportFloat: true

        - func: cosh
          header: arith
          verify: std::cosh
          supportedTypes:
                  supportFloat: true

        - func: tanh
          header: arith
          verify: std::tanh
          supportedTypes:
                  supportFloat: true

        - func: asinh
          header: arith
          supportedTypes:
                  supportFloat: true

        - func: acosh
          header: arith
          supportedTypes:
                  supportFloat: true

        - func: atanh
          header: arith
          supportedTypes:
                  supportFloat: true

        - func: pow2
          header: arith
          # TODO: type-specific verify functions
          supportedTypes:
                  supportAll: true

        - func: sigmoid
          header: arith
          verify: testSigmoid
          supportedTypes:
                  supportFloat: true

        - func: exp
          header: arith
          verify: std::exp
          supportedTypes:
                  supportFloat: true

        - func: expm1
          header: arith
          verify: std::expm1
          supportedTypes:
                  supportFloat: true

        - func: erf
          header: arith
          supportedTypes:
                  supportFloat: true

        - func: erfc
          header: arith
          supportedTypes:
                  supportFloat: true

        - func: log
          header: arith
          verify: std::log
          supportedTypes:
                  supportFloat: true

        - func: log1p
          header: arith
          verify: std::log1p
          supportedTypes:
                  supportFloat: true

        - func: log10
          header: arith
          verify: std::log10
          supportedTypes:
                  supportFloat: true

        - func: log2
          header: arith
          verify: std::log2
          supportedTypes:
                  supportFloat: true

        - func: sqrt
          header: arith
          verify: std::sqrt
          supportedTypes:
                  supportFloat: true

        - func: cbrt
          header: arith
          verify: std::cbrt
          supportedTypes:
                  supportFloat: true

        - func: factorial
          header: arith
          verify: testFactorial
          supportedTypes:
                  supportFloat: true

        - func: tgamma
          header: arith
          verify: std::tgamma
          supportedTypes:
                  supportFloat: true

        - func: lgamma
          header: arith
          verify: std::lgamma
          supportedTypes:
                  supportFloat: true

        #
        # af/data.h
        #

        # TODO: flat, custom

        #
        # af/signal.h
        #

        - func: dft
          header: signal
          supportedTypes:
                  supportComplexFloat: true

        - func: idft
          header: signal
          supportedTypes:
                  supportComplexFloat: true

SingleOutputSources:
        #
        # af/data.h
        #

        - func: randu
          header: data
          supportedTypes:
                  supportAll: true

        - func: randn
          header: data
          supportedTypes:
                  supportAll: true

        - func: identity
          header: data
          supportedTypes:
                  supportAll: true

TwoToOneBlocks:
        #
        # af/arith.h
        #

        - func: hypot
          header: arith
          supportedTypes:
                  supportFloat: true

        #
        # af/data.h
        #

        - func: min
          header: data
          supportedTypes:
                  supportInt: true
                  supportUInt: true
                  supportFloat: true

        - func: max
          header: data
          supportedTypes:
                  supportInt: true
                  supportUInt: true
                  supportFloat: true

        - func: rem
          header: data
          supportedTypes:
                  supportAll: true

        - func: mod
          header: data
          supportedTypes:
                  supportAll: true

        - func: hypot
          header: data
          supportedTypes:
                  supportAll: true

        - func: atan2
          header: data
          supportedTypes:
                  supportFloat: true

# TODO: figure out second af::complex
#        - func: complex2
#          header: data
#          supportedInputTypes:
#                  supportFloat: true
#          supportedOutputTypes:
#                  supportComplexFloat: true
